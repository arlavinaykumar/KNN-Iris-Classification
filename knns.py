# -*- coding: utf-8 -*-
"""knns.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12yyk36-2YpFdR36aE3HJ-Qw2UEYySQkp
"""

#1. Import Libraries and Load Dataset

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay

# Load dataset
from google.colab import files

uploaded = files.upload()

import pandas as pd

# Automatically gets the uploaded file name
df = pd.read_csv(list(uploaded.keys())[0])
print(df.head())

#2. Preprocessing

# Drop 'Id' column
df = df.drop(columns=['Id'])

# Features and Labels
X = df.drop('Species', axis=1)
y = df['Species']

# Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

#3. Split Data
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42
)

#4. Model Training with Different K Values
k_values = [1, 3, 5, 7]
accuracies = []

for k in k_values:
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    y_pred = knn.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    accuracies.append(acc)
    print(f"K={k}, Accuracy={acc:.2f}")

#5. Evaluate Best Model
# Assume K=3 was best
best_knn = KNeighborsClassifier(n_neighbors=3)
best_knn.fit(X_train, y_train)
y_pred = best_knn.predict(X_test)

# Accuracy
print("Accuracy:", accuracy_score(y_test, y_pred))

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred, labels=best_knn.classes_)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=best_knn.classes_)
disp.plot()
plt.title("Confusion Matrix for K=3")
plt.show()

